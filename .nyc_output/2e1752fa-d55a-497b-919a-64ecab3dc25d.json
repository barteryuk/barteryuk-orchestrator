{"/Users/robin/Desktop/hacktiv8/phase3/w4/barteryuk/barteryuk-orchestrator/datasources/admin.js":{"path":"/Users/robin/Desktop/hacktiv8/phase3/w4/barteryuk/barteryuk-orchestrator/datasources/admin.js","statementMap":{"0":{"start":{"line":1,"column":14},"end":{"line":1,"column":30}},"1":{"start":{"line":3,"column":14},"end":{"line":3,"column":32}},"2":{"start":{"line":5,"column":14},"end":{"line":5,"column":25}},"3":{"start":{"line":6,"column":16},"end":{"line":6,"column":36}},"4":{"start":{"line":10,"column":4},"end":{"line":27,"column":5}},"5":{"start":{"line":11,"column":21},"end":{"line":11,"column":58}},"6":{"start":{"line":13,"column":6},"end":{"line":24,"column":7}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":22}},"8":{"start":{"line":18,"column":12},"end":{"line":21,"column":10}},"9":{"start":{"line":22,"column":8},"end":{"line":22,"column":50}},"10":{"start":{"line":23,"column":8},"end":{"line":23,"column":20}},"11":{"start":{"line":26,"column":6},"end":{"line":26,"column":44}},"12":{"start":{"line":31,"column":4},"end":{"line":68,"column":5}},"13":{"start":{"line":34,"column":10},"end":{"line":37,"column":8}},"14":{"start":{"line":38,"column":21},"end":{"line":38,"column":58}},"15":{"start":{"line":40,"column":6},"end":{"line":45,"column":7}},"16":{"start":{"line":41,"column":8},"end":{"line":41,"column":28}},"17":{"start":{"line":42,"column":8},"end":{"line":42,"column":50}},"18":{"start":{"line":44,"column":8},"end":{"line":44,"column":50}},"19":{"start":{"line":47,"column":25},"end":{"line":47,"column":67}},"20":{"start":{"line":47,"column":43},"end":{"line":47,"column":66}},"21":{"start":{"line":49,"column":6},"end":{"line":65,"column":7}},"22":{"start":{"line":50,"column":8},"end":{"line":54,"column":10}},"23":{"start":{"line":56,"column":8},"end":{"line":64,"column":10}},"24":{"start":{"line":67,"column":6},"end":{"line":67,"column":44}},"25":{"start":{"line":72,"column":4},"end":{"line":117,"column":5}},"26":{"start":{"line":73,"column":21},"end":{"line":80,"column":8}},"27":{"start":{"line":83,"column":10},"end":{"line":83,"column":16}},"28":{"start":{"line":85,"column":6},"end":{"line":101,"column":7}},"29":{"start":{"line":86,"column":23},"end":{"line":86,"column":60}},"30":{"start":{"line":88,"column":8},"end":{"line":100,"column":9}},"31":{"start":{"line":89,"column":10},"end":{"line":89,"column":28}},"32":{"start":{"line":90,"column":10},"end":{"line":90,"column":30}},"33":{"start":{"line":91,"column":10},"end":{"line":91,"column":54}},"34":{"start":{"line":95,"column":14},"end":{"line":98,"column":12}},"35":{"start":{"line":99,"column":10},"end":{"line":99,"column":55}},"36":{"start":{"line":103,"column":6},"end":{"line":107,"column":8}},"37":{"start":{"line":109,"column":6},"end":{"line":116,"column":8}},"38":{"start":{"line":121,"column":4},"end":{"line":173,"column":5}},"39":{"start":{"line":124,"column":10},"end":{"line":128,"column":8}},"40":{"start":{"line":129,"column":21},"end":{"line":129,"column":58}},"41":{"start":{"line":131,"column":6},"end":{"line":150,"column":7}},"42":{"start":{"line":132,"column":28},"end":{"line":132,"column":68}},"43":{"start":{"line":132,"column":48},"end":{"line":132,"column":67}},"44":{"start":{"line":133,"column":27},"end":{"line":133,"column":67}},"45":{"start":{"line":133,"column":47},"end":{"line":133,"column":66}},"46":{"start":{"line":135,"column":8},"end":{"line":141,"column":9}},"47":{"start":{"line":136,"column":10},"end":{"line":136,"column":52}},"48":{"start":{"line":137,"column":10},"end":{"line":137,"column":58}},"49":{"start":{"line":138,"column":10},"end":{"line":138,"column":37}},"50":{"start":{"line":139,"column":10},"end":{"line":139,"column":30}},"51":{"start":{"line":140,"column":10},"end":{"line":140,"column":59}},"52":{"start":{"line":145,"column":12},"end":{"line":148,"column":10}},"53":{"start":{"line":149,"column":8},"end":{"line":149,"column":53}},"54":{"start":{"line":152,"column":6},"end":{"line":163,"column":7}},"55":{"start":{"line":153,"column":8},"end":{"line":156,"column":10}},"56":{"start":{"line":158,"column":8},"end":{"line":162,"column":10}},"57":{"start":{"line":165,"column":6},"end":{"line":172,"column":8}},"58":{"start":{"line":177,"column":4},"end":{"line":222,"column":5}},"59":{"start":{"line":180,"column":10},"end":{"line":183,"column":8}},"60":{"start":{"line":184,"column":21},"end":{"line":184,"column":58}},"61":{"start":{"line":186,"column":6},"end":{"line":198,"column":7}},"62":{"start":{"line":187,"column":28},"end":{"line":187,"column":68}},"63":{"start":{"line":187,"column":48},"end":{"line":187,"column":67}},"64":{"start":{"line":188,"column":8},"end":{"line":188,"column":28}},"65":{"start":{"line":189,"column":8},"end":{"line":189,"column":57}},"66":{"start":{"line":193,"column":12},"end":{"line":196,"column":10}},"67":{"start":{"line":197,"column":8},"end":{"line":197,"column":53}},"68":{"start":{"line":200,"column":6},"end":{"line":212,"column":7}},"69":{"start":{"line":201,"column":8},"end":{"line":205,"column":10}},"70":{"start":{"line":207,"column":8},"end":{"line":211,"column":10}},"71":{"start":{"line":214,"column":6},"end":{"line":221,"column":8}},"72":{"start":{"line":226,"column":4},"end":{"line":249,"column":5}},"73":{"start":{"line":227,"column":21},"end":{"line":234,"column":8}},"74":{"start":{"line":237,"column":10},"end":{"line":237,"column":16}},"75":{"start":{"line":238,"column":6},"end":{"line":242,"column":8}},"76":{"start":{"line":244,"column":6},"end":{"line":248,"column":8}},"77":{"start":{"line":254,"column":0},"end":{"line":254,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":2},"end":{"line":9,"column":3}},"loc":{"start":{"line":9,"column":25},"end":{"line":28,"column":3}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":30,"column":2},"end":{"line":30,"column":3}},"loc":{"start":{"line":30,"column":55},"end":{"line":69,"column":3}},"line":30},"2":{"name":"(anonymous_2)","decl":{"start":{"line":47,"column":37},"end":{"line":47,"column":38}},"loc":{"start":{"line":47,"column":43},"end":{"line":47,"column":66}},"line":47},"3":{"name":"(anonymous_3)","decl":{"start":{"line":71,"column":2},"end":{"line":71,"column":3}},"loc":{"start":{"line":71,"column":31},"end":{"line":118,"column":3}},"line":71},"4":{"name":"(anonymous_4)","decl":{"start":{"line":120,"column":2},"end":{"line":120,"column":3}},"loc":{"start":{"line":120,"column":28},"end":{"line":174,"column":3}},"line":120},"5":{"name":"(anonymous_5)","decl":{"start":{"line":132,"column":42},"end":{"line":132,"column":43}},"loc":{"start":{"line":132,"column":48},"end":{"line":132,"column":67}},"line":132},"6":{"name":"(anonymous_6)","decl":{"start":{"line":133,"column":41},"end":{"line":133,"column":42}},"loc":{"start":{"line":133,"column":47},"end":{"line":133,"column":66}},"line":133},"7":{"name":"(anonymous_7)","decl":{"start":{"line":176,"column":2},"end":{"line":176,"column":3}},"loc":{"start":{"line":176,"column":31},"end":{"line":223,"column":3}},"line":176},"8":{"name":"(anonymous_8)","decl":{"start":{"line":187,"column":42},"end":{"line":187,"column":43}},"loc":{"start":{"line":187,"column":48},"end":{"line":187,"column":67}},"line":187},"9":{"name":"(anonymous_9)","decl":{"start":{"line":225,"column":2},"end":{"line":225,"column":3}},"loc":{"start":{"line":225,"column":30},"end":{"line":250,"column":3}},"line":225}},"branchMap":{"0":{"loc":{"start":{"line":13,"column":6},"end":{"line":24,"column":7}},"type":"if","locations":[{"start":{"line":13,"column":6},"end":{"line":24,"column":7}},{"start":{"line":13,"column":6},"end":{"line":24,"column":7}}],"line":13},"1":{"loc":{"start":{"line":40,"column":6},"end":{"line":45,"column":7}},"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":45,"column":7}},{"start":{"line":40,"column":6},"end":{"line":45,"column":7}}],"line":40},"2":{"loc":{"start":{"line":49,"column":6},"end":{"line":65,"column":7}},"type":"if","locations":[{"start":{"line":49,"column":6},"end":{"line":65,"column":7}},{"start":{"line":49,"column":6},"end":{"line":65,"column":7}}],"line":49},"3":{"loc":{"start":{"line":85,"column":6},"end":{"line":101,"column":7}},"type":"if","locations":[{"start":{"line":85,"column":6},"end":{"line":101,"column":7}},{"start":{"line":85,"column":6},"end":{"line":101,"column":7}}],"line":85},"4":{"loc":{"start":{"line":88,"column":8},"end":{"line":100,"column":9}},"type":"if","locations":[{"start":{"line":88,"column":8},"end":{"line":100,"column":9}},{"start":{"line":88,"column":8},"end":{"line":100,"column":9}}],"line":88},"5":{"loc":{"start":{"line":131,"column":6},"end":{"line":150,"column":7}},"type":"if","locations":[{"start":{"line":131,"column":6},"end":{"line":150,"column":7}},{"start":{"line":131,"column":6},"end":{"line":150,"column":7}}],"line":131},"6":{"loc":{"start":{"line":135,"column":8},"end":{"line":141,"column":9}},"type":"if","locations":[{"start":{"line":135,"column":8},"end":{"line":141,"column":9}},{"start":{"line":135,"column":8},"end":{"line":141,"column":9}}],"line":135},"7":{"loc":{"start":{"line":136,"column":27},"end":{"line":136,"column":51}},"type":"binary-expr","locations":[{"start":{"line":136,"column":27},"end":{"line":136,"column":43}},{"start":{"line":136,"column":47},"end":{"line":136,"column":51}}],"line":136},"8":{"loc":{"start":{"line":137,"column":30},"end":{"line":137,"column":57}},"type":"binary-expr","locations":[{"start":{"line":137,"column":30},"end":{"line":137,"column":49}},{"start":{"line":137,"column":53},"end":{"line":137,"column":57}}],"line":137},"9":{"loc":{"start":{"line":152,"column":6},"end":{"line":163,"column":7}},"type":"if","locations":[{"start":{"line":152,"column":6},"end":{"line":163,"column":7}},{"start":{"line":152,"column":6},"end":{"line":163,"column":7}}],"line":152},"10":{"loc":{"start":{"line":186,"column":6},"end":{"line":198,"column":7}},"type":"if","locations":[{"start":{"line":186,"column":6},"end":{"line":198,"column":7}},{"start":{"line":186,"column":6},"end":{"line":198,"column":7}}],"line":186},"11":{"loc":{"start":{"line":200,"column":6},"end":{"line":212,"column":7}},"type":"if","locations":[{"start":{"line":200,"column":6},"end":{"line":212,"column":7}},{"start":{"line":200,"column":6},"end":{"line":212,"column":7}}],"line":200}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":2,"6":2,"7":1,"8":1,"9":1,"10":1,"11":0,"12":3,"13":3,"14":3,"15":3,"16":2,"17":2,"18":1,"19":3,"20":12,"21":3,"22":2,"23":1,"24":0,"25":3,"26":3,"27":2,"28":2,"29":2,"30":2,"31":1,"32":1,"33":1,"34":1,"35":1,"36":2,"37":1,"38":4,"39":4,"40":3,"41":3,"42":2,"43":8,"44":2,"45":8,"46":2,"47":1,"48":1,"49":1,"50":1,"51":1,"52":1,"53":1,"54":3,"55":1,"56":2,"57":1,"58":4,"59":4,"60":3,"61":3,"62":2,"63":6,"64":2,"65":2,"66":1,"67":1,"68":3,"69":1,"70":2,"71":1,"72":2,"73":2,"74":1,"75":1,"76":1,"77":1},"f":{"0":2,"1":3,"2":12,"3":3,"4":4,"5":8,"6":8,"7":4,"8":6,"9":2},"b":{"0":[1,1],"1":[2,1],"2":[2,1],"3":[2,0],"4":[1,1],"5":[2,1],"6":[1,1],"7":[1,0],"8":[1,0],"9":[1,2],"10":[2,1],"11":[1,2]},"inputSourceMap":{"version":3,"sources":["admin.js"],"names":["axios","require","Redis","redis","baseUrl","process","env","ADMINAPI","Controller","findAll","admins","JSON","parse","get","data","url","method","set","stringify","error","console","log","findByName","parent","args","context","info","del","filtered","filter","el","email","undefined","status","message","admin","_id","password","create","_","result","errors","push","dataGet","response","put","notFiltered","delete","name","login","access_token","module","exports"],"mappings":"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","sourceRoot":"/Users/robin/Desktop/hacktiv8/phase3/w4/barteryuk/barteryuk-orchestrator/datasources/","sourcesContent":["const axios = require(\"axios\");\nconst Redis = require(\"ioredis\");\nconst redis = new Redis();\n\nconst baseUrl = process.env.ADMINAPI;\n\nclass Controller {\n  static async findAll() {\n    try {\n      const admins = JSON.parse(await redis.get(\"admins\"));\n      if (admins) {\n        return admins;\n      } else {\n        const { data } = await axios({\n          url: baseUrl,\n          method: \"GET\",\n        });\n        redis.set(\"admins\", JSON.stringify(data));\n        return data;\n      }\n    } catch (error) {\n      return console.log(\"error : \", error);\n    }\n  }\n\n  static async findByName(parent, args, context, info) {\n    try {\n      const { data } = await axios({\n        url: baseUrl,\n        method: \"GET\",\n      });\n\n      const admins = JSON.parse(await redis.get(\"admins\"));\n      if (admins) {\n        redis.del(\"admins\");\n        redis.set(\"admins\", JSON.stringify(data));\n      } else {\n        redis.set(\"admins\", JSON.stringify(data));\n      }\n\n      const [filtered] = data.filter((el) => el.email === args.email);\n      if (filtered !== undefined) {\n        return {\n          status: 200,\n          message: \"Admin Found\",\n          admin: filtered,\n        };\n      } else {\n        return {\n          status: 404,\n          message: \"Orchestrator Validation: Admin not found\",\n          admin: {\n            _id: \"not found\",\n            email: args.email,\n            password: \"not found\",\n          },\n        };\n      }\n    } catch (error) {\n      return console.log(\"error : \", error);\n    }\n  }\n\n  static async create(_, args) {\n    try {\n      const result = await axios({\n        url: baseUrl,\n        method: \"POST\",\n        data: {\n          email: args.admin.email,\n          password: args.admin.password,\n        },\n      });\n\n      const { data } = result;\n      if (!data.errors) {\n        const admins = JSON.parse(await redis.get(\"admins\"));\n        if (admins) {\n          admins.push(data);\n          redis.del(\"admins\");\n          redis.set(\"admins\", JSON.stringify(admins));\n        } else {\n          const { data: dataGet } = await axios({\n            url: baseUrl,\n            method: \"GET\",\n          });\n          redis.set(\"admins\", JSON.stringify(dataGet));\n        }\n      }\n\n      return {\n        status: 201,\n        message: \"Orchestrator successfully created data to adminService\",\n        admin: data,\n      };\n    } catch (error) {\n      return {\n        status: error.response.data.status,\n        message: error.response.data.message,\n        admin: {\n          _id: \"not found\",\n          ...args.admin,\n        },\n      };\n    }\n  }\n\n  static async put(_, args) {\n    try {\n      const { data } = await axios({\n        url: baseUrl + args._id,\n        method: \"PUT\",\n        data: args.admin,\n      });\n\n      const admins = JSON.parse(await redis.get(\"admins\"));\n      if (admins) {\n        const notFiltered = admins.filter((el) => el._id !== args._id);\n        const [filtered] = admins.filter((el) => el._id === args._id);\n\n        if (filtered !== undefined) {\n          filtered.email = args.admin.email || null;\n          filtered.password = args.admin.password || null;\n          notFiltered.push(filtered);\n          redis.del(\"admins\");\n          redis.set(\"admins\", JSON.stringify(notFiltered));\n        }\n      } else {\n        const { data: dataGet } = await axios({\n          url: baseUrl,\n          method: \"GET\",\n        });\n        redis.set(\"admins\", JSON.stringify(dataGet));\n      }\n      if (data === null) {\n        return {\n          status: 404,\n          message: \"Orchestrator Validation: Admin not found\",\n        };\n      } else {\n        return {\n          status: 200,\n          message: \"Orchestrator successfully updated data to adminService\",\n          admin: data,\n        };\n      }\n    } catch (error) {\n      return {\n        status: error.response.data.status,\n        message: error.response.data.message,\n        admin: {\n          _id: \"not found\",\n          ...args.admin,\n        },\n      };\n    }\n  }\n\n  static async delete(_, args) {\n    try {\n      const { data } = await axios({\n        url: baseUrl + args._id,\n        method: \"DELETE\",\n      });\n      const admins = JSON.parse(await redis.get(\"admins\"));\n      if (admins) {\n        const notFiltered = admins.filter((el) => el._id !== args._id);\n        redis.del(\"admins\");\n        redis.set(\"admins\", JSON.stringify(notFiltered));\n      } else {\n        const { data: dataGet } = await axios({\n          url: baseUrl,\n          method: \"GET\",\n        });\n        redis.set(\"admins\", JSON.stringify(dataGet));\n      }\n      if (data === null) {\n        return {\n          status: 404,\n          name: \"Not Found\",\n          message: \"Orchestrator Validation: Admin not found\",\n        };\n      } else {\n        return {\n          status: 200,\n          message: \"Orchestrator successfully deleted data from adminService\",\n          admin: data,\n        };\n      }\n    } catch (error) {\n      return {\n        status: error.response.data.status,\n        message: error.response.data.message,\n        admin: {\n          _id: \"not found\",\n          ...args.admin,\n        },\n      };\n    }\n  }\n\n  static async login(_, args) {\n    try {\n      const result = await axios({\n        url: baseUrl + \"login\",\n        method: \"POST\",\n        data: {\n          email: args.email,\n          password: args.password,\n        },\n      });\n      const { data } = result;\n\n      return {\n        status: 200,\n        message: \"Orchestrator successfully logged in admin to adminService\",\n        access_token: data.access_token,\n      };\n    } catch (error) {\n      return {\n        status: error.response.data.status,\n        message: error.response.data.message,\n        access_token: \"not found\",\n      };\n    }\n  }\n}\n\nmodule.exports = Controller;\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a91b03031d45f76312da2abdb09b2c6021f9d92b","contentHash":"0fe74f1709c1ec8b59c662c3b50f705d183a0deaf2c3e2ac834d3cadf3fdb111"}}